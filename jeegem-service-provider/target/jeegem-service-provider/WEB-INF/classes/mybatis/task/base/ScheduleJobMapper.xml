<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeegem.repository.task.base.ScheduleJobDao">
	<!-- com.jeegem.entity.task.base.ScheduleJob  -->
 	<resultMap id="base" type="ScheduleJob" ></resultMap>
 	<select id="find"  resultMap="base" parameterType="ScheduleJob">
       SELECT t.scheduleJobId,t.jobName,t.aliasName,t.jobGroup,t.jobClass,t.status,t.cronExpression,
       		  t.description,t.createTime,t.updateTime FROM jeegem_TASK_SCHEDULE t WHERE 1=1 
       <if test="scheduleJobId != null and scheduleJobId!='' ">
        	AND t.scheduleJobId=#{scheduleJobId}
       </if>
       <if test="status != null ">
        	AND t.status=#{status}
       </if>
    </select> 
 	<select id="findByPage"  resultMap="base" parameterType="ScheduleJob">
       SELECT t.scheduleJobId,t.jobName,t.aliasName,t.jobGroup,t.jobClass,t.status,t.cronExpression,
       		  t.description,t.createTime,t.updateTime FROM jeegem_TASK_SCHEDULE t WHERE 1=1 
        <if test="param.scheduleJobId!= null and param.scheduleJobId!='' ">
        	AND t.scheduleJobId=#{param.scheduleJobId}
       </if>
       <if test="param.status!= null">
        	AND t.status=#{param.status}
       </if>
       <if test="param.keyWord!= null">
        	AND (
        	t.jobName LIKE CONCAT('%',#{param.keyWord},'%')    
        	OR t.jobGroup LIKE CONCAT('%',#{param.keyWord},'%')
        	OR t.jobClass LIKE CONCAT('%',#{param.keyWord},'%')
        	OR t.aliasName LIKE CONCAT('%',#{param.keyWord},'%')
        	)
       </if>
       order by t.createTime desc
    </select>  
    <select id="count"  resultType="int" parameterType="ScheduleJob">
       SELECT count(*) FROM jeegem_TASK_SCHEDULE t
    </select>        
 	<insert id="insert"  parameterType="ScheduleJob">	
 	<![CDATA[
	INSERT INTO jeegem_TASK_SCHEDULE(
	scheduleJobId,
	jobName,
	aliasName,
	jobGroup,
	jobClass,
	status,
	cronExpression,
	description,
	createTime
	) VALUES (
	#{scheduleJobId},
	#{jobName},
	#{aliasName},	
	#{jobGroup},
	#{jobClass},
	#{status},
	#{cronExpression},
	#{description},
	#{createTime}
	)
	]]>  
	</insert>
	<delete id="delete" parameterType="ScheduleJob">
	DELETE FROM jeegem_TASK_SCHEDULE  WHERE 1=1 
	AND scheduleJobId=#{scheduleJobId} 
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
	DELETE FROM jeegem_TASK_SCHEDULE 
	WHERE scheduleJobId IN(
		<foreach item="o" collection="list" open="" separator="," close="" >
			#{o.scheduleJobId}
		</foreach>
		)
	</delete>
	<update id="update" parameterType="ScheduleJob">
		UPDATE jeegem_TASK_SCHEDULE 
		SET jobName=#{jobName},
			aliasName=#{aliasName},
			jobGroup=#{jobGroup},
			jobClass=#{jobClass},		
			status=#{status},
			cronExpression =#{cronExpression},
			description =#{description},	
			updateTime =#{updateTime}
		WHERE 
			scheduleJobId=#{scheduleJobId}
	</update>	
	
	<select id="getScheduleJobById"  resultMap="base" parameterType="String">
       SELECT t.scheduleJobId,t.jobName,t.aliasName,t.jobGroup,t.jobClass,t.status,t.cronExpression,
       		  t.description,t.createTime,t.updateTime FROM jeegem_TASK_SCHEDULE t 
       WHERE t.scheduleJobId=#{scheduleJobId}
    </select> 
</mapper>